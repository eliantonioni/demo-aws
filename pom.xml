<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.1</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.aeliseev</groupId>
	<artifactId>demo-aws</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>demo-aws</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<docker.repo>eliantonioni</docker.repo>
		<docker.tag>latest</docker.tag>
		<docker.registry>registry.hub.docker.com</docker.registry>
		<!-- image will be pushed to docker-hub registry -->
		<!--docker.name>${docker.registry}/${docker.repo}/${project.artifactId}:${docker.tag}</docker.name-->
		<!-- image will be pushed to local registry (docker logout, then mvn package -Pjib) -->
		<docker.name>${docker.repo}/${project.artifactId}:${docker.tag}</docker.name>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing-bridge-brave</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>

		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>jib</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.google.cloud.tools</groupId>
						<artifactId>jib-maven-plugin</artifactId>
						<version>3.4.0</version>
						<configuration>
							<from>
								<image>eclipse-temurin:17-jre-jammy</image>
							</from>
							<to>
								<image>${docker.name}</image>
							</to>
							<container>
								<environment>
									<_JAVA_OPTIONS>'-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005'</_JAVA_OPTIONS>
									<swarm.http.port>8080</swarm.http.port>
								</environment>
								<ports>
									<port>8080</port>
									<port>5005</port>
								</ports>
								<creationTime>${maven.build.timestamp}</creationTime>
							</container>
						</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<!--
										this goal will use underlying docker to run
										(allowing to switch deploy context by docker login/logout)
									-->
									<goal>dockerBuild</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
